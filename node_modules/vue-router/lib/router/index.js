'use strict';

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _routeRecognizer = require('route-recognizer');

var _routeRecognizer2 = _interopRequireDefault(_routeRecognizer);

var historyBackends = {
  abstract: require('../history/abstract'),
  hash: require('../history/hash'),
  html5: require('../history/html5')
};

/**
 * Router constructor
 *
 * @param {Object} [options]
 */

var Router = function Router() {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var _ref$hashbang = _ref.hashbang;
  var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;
  var _ref$abstract = _ref.abstract;
  var abstract = _ref$abstract === undefined ? false : _ref$abstract;
  var _ref$history = _ref.history;
  var history = _ref$history === undefined ? false : _ref$history;
  var _ref$saveScrollPosition = _ref.saveScrollPosition;
  var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;
  var _ref$transitionOnLoad = _ref.transitionOnLoad;
  var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;
  var _ref$suppressTransitionError = _ref.suppressTransitionError;
  var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;
  var _ref$root = _ref.root;
  var root = _ref$root === undefined ? null : _ref$root;
  var _ref$linkActiveClass = _ref.linkActiveClass;
  var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;

  _classCallCheck(this, Router);

  /* istanbul ignore if */
  if (!Router.installed) {
    throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');
  }

  // Vue instances
  this.app = null;
  this._views = [];
  this._children = [];

  // route recognizer
  this._recognizer = new _routeRecognizer2['default']();
  this._guardRecognizer = new _routeRecognizer2['default']();

  // state
  this._started = false;
  this._currentRoute = {};
  this._currentTransition = null;
  this._previousTransition = null;
  this._notFoundHandler = null;
  this._beforeEachHook = null;
  this._afterEachHook = null;

  // feature detection
  this._hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;

  // trigger transition on initial render?
  this._rendered = false;
  this._transitionOnLoad = transitionOnLoad;

  // history mode
  this._abstract = abstract;
  this._hashbang = hashbang;
  this._history = this._hasPushState && history;

  // other options
  this._saveScrollPosition = saveScrollPosition;
  this._linkActiveClass = linkActiveClass;
  this._suppress = suppressTransitionError;

  // create history object
  var inBrowser = Router.Vue.util.inBrowser;
  this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';

  var History = historyBackends[this.mode];
  var self = this;
  this.history = new History({
    root: root,
    hashbang: this._hashbang,
    onChange: function onChange(path, state, anchor) {
      self._match(path, state, anchor);
    }
  });
};

exports['default'] = Router;

Router.installed = false;
module.exports = exports['default'];